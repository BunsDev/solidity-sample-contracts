/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export interface FavoriteNumberInterface extends utils.Interface {
  functions: {
    "getFavoriteNumber()": FunctionFragment;
    "setFavoriteNumber(uint256)": FunctionFragment;
    "updateFavoriteNumber(uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getFavoriteNumber"
      | "setFavoriteNumber"
      | "updateFavoriteNumber"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getFavoriteNumber",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setFavoriteNumber",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "updateFavoriteNumber",
    values: [PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(
    functionFragment: "getFavoriteNumber",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFavoriteNumber",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateFavoriteNumber",
    data: BytesLike
  ): Result;

  events: {
    "FavoriteNumberUpdated(address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "FavoriteNumberUpdated"): EventFragment;
}

export interface FavoriteNumberUpdatedEventObject {
  user: string;
  newFavoriteNumber: BigNumber;
}
export type FavoriteNumberUpdatedEvent = TypedEvent<
  [string, BigNumber],
  FavoriteNumberUpdatedEventObject
>;

export type FavoriteNumberUpdatedEventFilter =
  TypedEventFilter<FavoriteNumberUpdatedEvent>;

export interface FavoriteNumber extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: FavoriteNumberInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getFavoriteNumber(overrides?: CallOverrides): Promise<[BigNumber]>;

    setFavoriteNumber(
      _favoriteNumber: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    updateFavoriteNumber(
      _newFavoriteNumber: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  getFavoriteNumber(overrides?: CallOverrides): Promise<BigNumber>;

  setFavoriteNumber(
    _favoriteNumber: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  updateFavoriteNumber(
    _newFavoriteNumber: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    getFavoriteNumber(overrides?: CallOverrides): Promise<BigNumber>;

    setFavoriteNumber(
      _favoriteNumber: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    updateFavoriteNumber(
      _newFavoriteNumber: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "FavoriteNumberUpdated(address,uint256)"(
      user?: PromiseOrValue<string> | null,
      newFavoriteNumber?: null
    ): FavoriteNumberUpdatedEventFilter;
    FavoriteNumberUpdated(
      user?: PromiseOrValue<string> | null,
      newFavoriteNumber?: null
    ): FavoriteNumberUpdatedEventFilter;
  };

  estimateGas: {
    getFavoriteNumber(overrides?: CallOverrides): Promise<BigNumber>;

    setFavoriteNumber(
      _favoriteNumber: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    updateFavoriteNumber(
      _newFavoriteNumber: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getFavoriteNumber(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setFavoriteNumber(
      _favoriteNumber: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    updateFavoriteNumber(
      _newFavoriteNumber: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
